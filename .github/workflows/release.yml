name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'release tag'
        required: true

permissions:
  contents: read

jobs:
  release:
    outputs:
      hashes: ${{ steps.slsa.outputs.hashes }}
      image_url: ${{ steps.slsa.outputs.image_url }}
      image_digest: ${{ steps.slsa.outputs.image_digest }}
    runs-on: ubuntu-latest
    permissions:
      contents: write # for creating the GitHub release.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for pushing and signing container images.
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Flux CLI
        uses: fluxcd/flux2/action@709b17ce59d184427c1395bc70f496ba528d3bee # v2.5.1
        with:
          version: 'v2.5.1'
      - name: Prepare
        id: prep
        run: |
          VERSION=${GITHUB_REF/refs\/tags\//}
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Generate images meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            ghcr.io/coppersoft-dev/ecp-metrics-server
          tags: |
            type=raw,value=${{ steps.prep.outputs.VERSION }}
      - name: Build and push
        uses: docker/build-push-action@v6
        id: push
        with:
          context: "."
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: patch kustomization
        run: |
          yq -i '(.images[]|select(.name=="ghcr.io/coppersoft-dev/ecp-metrics-server").newTag)="${{ steps.prep.outputs.VERSION }}"' ./kustomize/kustomization.yaml
          yq -i '(.images[]|select(.name=="ghcr.io/coppersoft-dev/ecp-metrics-server").digest)="${{ steps.push.outputs.digest }}"' ./kustomize/kustomization.yaml
      - name: push OCI artifact
        run: |
          flux push artifact oci://ghcr.io/coppersoft-dev/manifests/ecp-metrics-server:${{ steps.prep.outputs.VERSION }} --path="./kustomize/" --source=$(git config --get remote.origin.url) --revision=${{ steps.prep.outputs.VERSION }}@sha1:$(git rev-parse HEAD)
